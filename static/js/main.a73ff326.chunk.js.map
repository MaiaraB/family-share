{"version":3,"sources":["context/auth.js","components/Header.js","components/AuthForms.js","pages/Calendar.js","pages/NewTask.js","PrivateRoute.js","pages/Login.js","pages/Signup.js","pages/AuthenticatedApp.js","App.js","serviceWorker.js","index.js"],"names":["AuthContext","createContext","AuthProvider","props","existingTokens","JSON","parse","localStorage","getItem","useState","authToken","setAuthToken","userData","setUserData","setTokens","data","undefined","removeItem","setItem","stringify","fetchUserData","token","axios","get","process","then","result","catch","err","login","email","password","a","post","status","signup","firstName","lastName","phoneNumber","country","username","confirmPassword","useEffect","Provider","value","logout","useAuth","useContext","useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","Header","classes","React","anchorEl","setAnchorEl","open","Boolean","handleClose","className","AppBar","position","Toolbar","IconButton","edge","color","aria-label","Typography","variant","aria-controls","aria-haspopup","onClick","event","currentTarget","id","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","onClose","MenuItem","styled","div","input","button","img","Calendar","NewTask","PrivateRoute","Component","component","rest","render","to","pathname","state","referer","location","minWidth","maxWidth","marginBottom","margin","width","display","flexDirection","alignItems","justifyContent","form","pos","Login","setEmail","setPassword","setIsError","CardContent","noValidade","autoComplete","TextField","type","label","onChange","e","target","CardActions","size","console","log","loggedIn","Signup","setFirstName","setLastName","setPhoneNumber","setCountry","setUsername","setConfirmPassword","onBlur","message","signedUp","AuthenticatedApp","container","marginTop","App","CssBaseline","Container","fixed","path","exact","window","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.a73ff326.chunk.js","sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\nimport axios from 'axios';\n\nconst AuthContext = createContext();\n\nfunction AuthProvider(props) {\n\n  const existingTokens = JSON.parse(localStorage.getItem('tokens'));//JSON.parse();\n  // console.log(\"EXITING TOKENS\", existingTokens);\n  const [authToken, setAuthToken] = useState(existingTokens);\n  const [userData, setUserData] = useState();\n\n  const setTokens = (data) => {\n    // console.log(\"SET TOKENS\", data);\n    if (data === undefined) {\n      localStorage.removeItem('tokens');\n      setAuthToken();\n    } else {\n      localStorage.setItem('tokens', JSON.stringify(data));\n      setAuthToken(data);\n    }\n  };\n\n  const fetchUserData = (token) => {\n    if (token !== null && token !== undefined && token !== 'undefined') {\n      axios.get(`${process.env.REACT_APP_API_VERIFY_USER}/${token}`)\n      .then((result) => {\n        // console.log('FETCH DATA RESULT: ', result);\n        setUserData(result.data);\n      })\n      .catch((err) => {\n        // console.log('FETCH DATA ERROR: ', err);\n        setUserData({});\n        setTokens();\n      });\n    }\n  }\n\n  const login = async (email, password) => {\n    try {\n      const result = await axios.post(process.env.REACT_APP_API_LOGIN, {\n        email,\n        password,\n      });\n      if (result.status === 200) {\n        setTokens(result.data.token);\n        fetchUserData(result.data.token);\n        return true;\n      }\n      else {\n        return false;\n      }\n    } catch (e) {\n      return false;\n    }\n  };\n  const logout = () => {\n    setTokens();\n    setUserData();\n  };\n  const signup = async (email, firstName, lastName, phoneNumber, country, username, password, confirmPassword) => {\n    try {\n      const result = await axios.post(process.env.REACT_APP_API_SIGNUP, {\n        email, firstName, lastName, phoneNumber, country, username, password, confirmPassword\n      });\n      if (result.status === 200) {\n        setTokens(result.data.token);\n        fetchUserData(result.data.token);\n        return true;\n      } else {\n        return false;\n      }\n    } catch (e) {\n      return false;\n    }\n  };\n\n  useEffect(() => {\n    fetchUserData(authToken);\n  }, [authToken]);\n\n  return <AuthContext.Provider value={{ userData, login, logout, signup }} {...props} />;\n}\n\nconst useAuth = () => useContext(AuthContext);\n\nexport { AuthProvider, useAuth };","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Menu from '@material-ui/core/Menu';\n\nimport { useAuth } from '../context/auth';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n  },\n}));\n\nexport default function Header() {\n  const classes = useStyles();\n  const { userData , logout } = useAuth();\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const open = Boolean(anchorEl);\n\n  const handleMenu = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const handleLogout = () => {\n    setAnchorEl(null);\n    logout();\n  };\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\n            <MenuIcon />\n          </IconButton>\n          <Typography variant=\"h6\" className={classes.title}>\n            Family Share\n          </Typography>\n          {userData && (\n            <div>\n              <IconButton\n                aria-label=\"account of current user\"\n                aria-controls=\"menu-appbar\"\n                aria-haspopup=\"true\"\n                onClick={handleMenu}\n                color=\"inherit\"\n              >\n                <AccountCircle />\n              </IconButton>\n              <Menu\n                id=\"menu-appbar\"\n                anchorEl={anchorEl}\n                anchorOrigin={{\n                  vertical: 'top',\n                  horizontal: 'right',\n                }}\n                keepMounted\n                transformOrigin={{\n                  vertical: 'top',\n                  horizontal: 'right',\n                }}\n                open={open}\n                onClose={handleClose}\n              >\n                <MenuItem onClick={handleClose}>My account</MenuItem>\n                <MenuItem onClick={handleLogout}>Log out</MenuItem>\n              </Menu>\n            </div>\n          )}\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}\n","import styled from 'styled-components';\n\nconst Card = styled.div`\n  box-sizing: border-box;\n  max-width: 410px;\n  margin: 0 auto;\n  padding: 0 2rem;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nconst Form = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n`;\n\nconst Input = styled.input `\n  padding: 1rem;\n  border: 1px solid #999;\n  margin-bottom: 1rem;\n  font-size: 0.8rem;\n  border-radius: 3px;\n`;\n\nconst Button = styled.button`\n  background: linear-gradient(to bottom, #6371c7, #5563c1);\n  border-color: #3f4eae;\n  border-radius: 3px;\n  padding: 1rem;\n  color: white;\n  fonrt-weight: 700;\n  width: 100%;\n  margin-bottom: 1rem;\n  font-size: 0.8rem;\n`;\n\nconst Logo = styled.img`\n  width: 50%;\n  margin-bottom: 1rem;\n`;\n\nconst Error = styled.div`\n  background-color: red;\n`;\n\nexport {Form, Input, Button, Logo, Card, Error};\n","import React from 'react';\n\nimport { useAuth } from '../context/auth';\nimport { Button } from '../components/AuthForms';\n\nfunction Calendar() {\n\n  return (\n    <div>\n      <div>Calendar Page</div>\n    </div>\n  );\n}\n\nexport default Calendar;","import React from 'react';\n\nfunction NewTask(props) {\n  return <div>New Task Page</div>;\n}\n\nexport default NewTask;","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\n\nimport { useAuth } from './context/auth';\n\nfunction PrivateRoute({component: Component, ...rest}) {\n  const { userData } = useAuth();\n\n  return (\n    <Route \n      {...rest} \n      render={\n        props => \n        userData ? (\n        <Component {...props} />\n      ) : (\n        <Redirect to={{ pathname: \"/login\", state: { referer: props.location } }} />\n      )}\n    />\n  );\n}\n\nexport default PrivateRoute;","import React, { useState } from 'react';\nimport { Link, Redirect } from 'react-router-dom';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport { useAuth } from '../context/auth';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    minWidth: 275,\n    maxWidth: 500,\n    marginBottom: 40,\n    '& .MuiTextField-root': {\n      margin: theme.spacing(1),\n      width: '50ch',\n    },\n    '& .MuiCardContent-root': {\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n    },\n    '& .MuiCardActions-root': {\n      justifyContent: 'center',\n    },\n  },\n  form: {\n    display: 'flex',\n    flexDirection: 'column',\n  },\n  pos: {\n    marginBottom: 12,\n  },\n}));\n\nconst Login = (props) => {\n  const classes = useStyles();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [isError, setIsError] = useState(false);\n  const { userData, login } = useAuth();\n  const referer = (props.location.state && props.location.state.referer) ? \n                    props.location.state.referer : '/';\n\n  function postLogin() {\n    console.log(\"POST LOGIN\");\n    login(email, password)\n      .then((loggedIn) => {\n        if (!loggedIn) {\n          setIsError(true);\n        }\n      });\n  }\n\n  if (userData) {\n    // console.log('referer: ', referer);\n    return <Redirect to={referer} />;\n  }\n\n  return (\n    <Card className={classes.root} variant=\"outlined\">\n      <CardContent>\n        <Typography className={classes.pos} variant=\"h4\"> Log In</Typography>\n        <form className={classes.form} noValidade autoComplete=\"off\">\n          <TextField \n            id=\"email\"\n            type=\"email\"\n            label=\"email\"\n            variant=\"outlined\"\n            value={email}\n            onChange={(e) => {\n              setEmail(e.target.value);\n            }} />\n          <TextField\n            id=\"password\" \n            type=\"password\" \n            label=\"password\"\n            variant=\"outlined\"\n            value={password}\n            onChange={(e) => {\n              setPassword(e.target.value);\n            }} />\n          {/* <Button onClick={postLogin}>Sign In</Button> */}\n        </form>\n        <Link to=\"/signup\">Don't have an account</Link>\n        {/* { isError && <Error>The email or password provided were incorrect</Error> } */}\n      </CardContent>\n      <CardActions>\n        <Button size=\"medium\" variant=\"contained\" color=\"primary\" onClick={postLogin}>Sign In</Button>\n      </CardActions>\n    </Card>  \n  );\n};\n\nexport default Login;","import React, { useState } from 'react';\nimport { Link, Redirect } from 'react-router-dom';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport { useAuth } from '../context/auth';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    minWidth: 275,\n    maxWidth: 500,\n    marginBottom: 40,\n    '& .MuiTextField-root': {\n      margin: theme.spacing(1),\n      width: '50ch',\n    },\n    '& .MuiCardContent-root': {\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n    },\n    '& .MuiCardActions-root': {\n      justifyContent: 'center',\n    },\n  },\n  form: {\n    display: 'flex',\n    flexDirection: 'column',\n  },\n  pos: {\n    marginBottom: 12,\n  },\n}));\n\nconst Signup = (props) => {\n  const classes = useStyles();\n  const [email, setEmail] = useState('');\n  const [firstName, setFirstName] = useState('');\n  const [lastName, setLastName] = useState('');\n  const [phoneNumber, setPhoneNumber] = useState('');\n  const [country, setCountry] = useState('');\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [isError, setIsError] = useState();\n  const { userData, signup } = useAuth();\n  const referer = (props.location.state && props.location.state.referer) ? \n                    props.location.state.referer : '/';\n\n  const postSignup = () => {\n    signup(email, firstName, lastName, phoneNumber, country, username, password, confirmPassword)\n      .then((signedUp) => {\n        if (!signedUp) {\n          setIsError({message: 'Something went wrong with the sign up. Verify all the fields'});\n        }\n      });\n  };\n\n  if (userData) {\n    console.log('referer: ', referer);\n    return <Redirect to={referer} />;\n  }\n\n  return (\n    <Card className={classes.root} variant=\"outlined\">\n      <CardContent>\n      <Typography className={classes.pos} variant=\"h4\">Sign Up</Typography>\n      <form className={classes.form} noValidade autoComplete=\"off\">\n        <TextField \n          id=\"email\"\n          type=\"email\" \n          label=\"email\"\n          variant=\"outlined\"\n          value={email}\n          onChange={(e) => { setEmail(e.target.value); }} />\n        <TextField \n          id=\"firstName\"\n          type=\"text\" \n          label=\"First name\"\n          variant=\"outlined\"\n          value={firstName}\n          onChange={(e) => { setFirstName(e.target.value); }} />\n        <TextField \n          id=\"lastName\"\n          type=\"text\" \n          label=\"Last name\"\n          variant=\"outlined\"\n          value={lastName}\n          onChange={(e) => { setLastName(e.target.value); }} />\n        <TextField \n          id=\"phoneNumber\"\n          type=\"text\" \n          label=\"Phone number\"\n          variant=\"outlined\"\n          value={phoneNumber}\n          onChange={(e) => { setPhoneNumber(e.target.value); }} />\n        <TextField \n          id=\"country\"\n          type=\"text\" \n          label=\"Country\"\n          variant=\"outlined\"\n          value={country}\n          onChange={(e) => { setCountry(e.target.value); }} />\n        <TextField \n          id=\"username\"\n          type=\"text\" \n          label=\"username\"\n          variant=\"outlined\"\n          value={username}\n          onChange={(e) => { setUsername(e.target.value); }} />\n        <TextField \n          id=\"password\"\n          type=\"password\" \n          label=\"password\"\n          variant=\"outlined\"\n          value={password}\n          onChange={(e) => { setPassword(e.target.value); }} />\n        <TextField \n          id=\"confirmPassword\"\n          type=\"password\" \n          label=\"password again\"\n          variant=\"outlined\"\n          value={confirmPassword}\n          onChange={(e) => { setConfirmPassword(e.target.value); }}\n          onBlur={(e) => {\n            if (confirmPassword !== password) {\n                setIsError({message: 'Confirm password does not match password'});\n              } else {\n                setIsError();\n              }\n            }} />\n      </form>\n      {/* { isError && <Error>{ isError.message }</Error> } */}\n      <Link to=\"/login\">Already have an account?</Link>\n      </CardContent>\n      <CardActions>\n        <Button size=\"medium\" variant=\"contained\" color=\"primary\" onClick={postSignup}>Sign Up</Button>\n      </CardActions>\n    </Card>\n  );\n};\n\nexport default Signup;","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst AuthenticatedApp = () => {\n\n  return (\n    <ul>\n      <li>\n        <Link to=\"/\">Calendar</Link>\n      </li>\n      <li>\n        <Link to=\"/new\">New task</Link>\n      </li>\n    </ul>\n  );\n};\n\nexport default AuthenticatedApp;","import React from 'react';\nimport { BrowserRouter, Route, Redirect } from 'react-router-dom';\nimport Container from '@material-ui/core/Container';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport './App.css';\nimport Header from './components/Header';\nimport Calendar from './pages/Calendar';\nimport NewTask from './pages/NewTask';\nimport PrivateRoute from './PrivateRoute';\nimport Login from './pages/Login';\nimport Signup from './pages/Signup';\nimport AuthenticatedApp from './pages/AuthenticatedApp';\nimport { useAuth } from './context/auth';\n\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    display: 'flex',\n    justifyContent: 'center',\n    marginTop: '30px',\n  },\n}));\n\nconst App = (props) => {\n  const classes = useStyles();\n  const { userData } = useAuth(); \n\n  return (\n    <BrowserRouter>\n      <div>\n        <CssBaseline />\n        <Header />\n        { userData ? <AuthenticatedApp /> : <Redirect to={{ pathname: \"/login\", state: { referer: props.location } }} />}\n        <Container className={classes.container} fixed>\n          <Route path=\"/login\" component={Login} />\n          <Route path=\"/signup\" component={Signup} />\n          <PrivateRoute exact path=\"/\" component={Calendar} />\n          <PrivateRoute path=\"/new\" component={NewTask} />\n        </Container>\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { AuthProvider } from './context/auth';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <AuthProvider>\n      <App />\n    </AuthProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}